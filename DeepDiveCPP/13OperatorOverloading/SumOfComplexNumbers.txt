// The program below uses a Complex class to add or substract two complex numbers.

// Both operators "+" and "-" are overloaded to be used to sum or substract instances of the class.

#include<iostream>

class Complex{
    private:
        double real;
        double imaginary;
    public:
        Complex(double real, double imag);
        Complex(Complex &x);

        void setReal(double real);
        void setImaginary(double imaginary);

        double getReal(){return real;}
        double getImaginary(){return imaginary;}

        Complex operator+(Complex a);
        Complex operator-(Complex a);

        bool isReal();

        // ~Complex();
};

int main(){
    Complex c1(5,3);
    Complex c2(3,5);
    Complex c3(0,0);

    c3=c1+c2;
    std::cout<<c3.getReal()<<" + "<<c3.getImaginary()<<"i"<<std::endl;
    
    c3=c1-c2;
    std::cout<<c3.getReal()<<" + "<<c3.getImaginary()<<"i"<<std::endl;

    return 0;
}

Complex::Complex(double real=0, double img=0){
    setReal(real);
    setImaginary(img);
}
Complex::Complex(Complex &x){
    real=x.real;
    imaginary=x.imaginary;
}
void Complex::setReal(double r){
    real=r;
}
void Complex::setImaginary(double im){
    imaginary=im;
}
Complex Complex::operator+(Complex a){
    Complex temp;
    temp.real=real+a.real;
    temp.imaginary=imaginary+a.imaginary;
    return temp;
}
Complex Complex::operator-(Complex a){
    Complex temp;
    temp.real=real-a.real;
    temp.imaginary=imaginary-a.imaginary;
    return temp;
}
bool Complex::isReal(){
    return imaginary==0;
}
// Complex::~Complex(){
//     cout<<"Object DESTROYED!"<<endl;
// }